[{"/home/gustavo/Documentos/GitHub/eagle/frontend/src/index.js":"1","/home/gustavo/Documentos/GitHub/eagle/frontend/src/App.js":"2","/home/gustavo/Documentos/GitHub/eagle/frontend/src/reportWebVitals.js":"3","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Menu.js":"4","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rodape.js":"5","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rotas.js":"6","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Inicio.js":"7","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Cabecalho.js":"8","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Aplicativo.js":"9","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Categoria.js":"10","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Cadastrar.js":"11","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Comentarios.js":"12","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Login.js":"13","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Pesquisar.js":"14","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Usuario.js":"15"},{"size":500,"mtime":1607226781389,"results":"16","hashOfConfig":"17"},{"size":647,"mtime":1608193219978,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607226781393,"results":"19","hashOfConfig":"17"},{"size":4235,"mtime":1608187252125,"results":"20","hashOfConfig":"17"},{"size":1159,"mtime":1608187297165,"results":"21","hashOfConfig":"17"},{"size":1312,"mtime":1608187284269,"results":"22","hashOfConfig":"17"},{"size":6286,"mtime":1608192365889,"results":"23","hashOfConfig":"17"},{"size":287,"mtime":1608167321905,"results":"24","hashOfConfig":"17"},{"size":6942,"mtime":1608229769209,"results":"25","hashOfConfig":"17"},{"size":2758,"mtime":1608192381625,"results":"26","hashOfConfig":"17"},{"size":9341,"mtime":1608192237910,"results":"27","hashOfConfig":"17"},{"size":8257,"mtime":1608229825869,"results":"28","hashOfConfig":"17"},{"size":2934,"mtime":1608192358029,"results":"29","hashOfConfig":"17"},{"size":2957,"mtime":1608192264710,"results":"30","hashOfConfig":"17"},{"size":13091,"mtime":1608247069048,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xa6r3f",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gustavo/Documentos/GitHub/eagle/frontend/src/index.js",[],["73","74"],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/App.js",["75","76"],"import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Rotas from './components/Rotas';\nimport Rodape from './components/Rodape';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport cookie from 'react-cookies'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [token, setToken] = useState({\n    token: cookie.loadAll()\n  })\n\n  useEffect(() =>{\n    token['token'] = cookie.loadAll()\n    // console.log(token);\n  })\n\n  return (\n    <div>\n        <Router>\n          <Menu />\n          <Rotas />\n          <Rodape />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gustavo/Documentos/GitHub/eagle/frontend/src/reportWebVitals.js",[],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Menu.js",["77","78","79","80","81","82","83","84","85","86","87"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { Link } from 'react-router-dom';\nimport cookie from 'react-cookies'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faSearch, faTag, faUser, faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\nimport { useRouteMatch } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction Menu(props){\n\n    let {path,  url} = useRouteMatch()\n\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n    })\n    const [pesquisar, setPesquisar] = useState('')\n\n    function handleChange(e) {\n        setPesquisar(e.target.value)\n    }\n\n    function handleClick(e) {\n        setPesquisar('')\n        document.querySelector('#pesquisar').value = \"\";  \n    }\n\n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n      })\n\n    return  <div className=\"w3-top\">\n                <nav className=\"w3-bar w3-light-gray \">\n                    <Link to=\"/\" className=\"w3-bar-item  w3-button\">\n                        <span className=\"hide-mobile\">Início </span>\n                        <FontAwesomeIcon icon={faHome} />\n                    </Link>\n                    <div className=\"w3-dropdown-hover \">\n                        <button className=\"w3-button \">\n                            <span className=\"hide-mobile\">Categorias </span>\n                            <FontAwesomeIcon icon={faTag} />\n                        </button>\n                        <div className=\"w3-dropdown-content w3-bar-block w3-card-4\">\n                            <Get url=\"http://localhost:5000/api/categoria\">\n                                {(error,response,isLoading,makeRequest,axios)=>{\n                                    if(error)return <a href=\"\" className=\"w3-bar-item  w3-button\">Erro</a>\n                                    if(isLoading)return <a href=\"\" className=\"w3-bar-item  w3-button\">Carregando!</a>\n                                    if(response != null){\n                                        let codigo = [];\n                                        response.data.map((valor, indice) => {\n                                            codigo.push(<Link to={\"/categoria/\"+valor._id} className=\"w3-bar-item  w3-button\">{valor.categoria}</Link>)\n                                        });\n                                        return codigo;\n                                    }\n                                    return <a href=\"\" className=\"w3-bar-item w3-button\">Nem carregou!</a>\n                                }}\n                            </Get>\n                        </div>\n                    </div>\n                    \n                    {token.token.token == undefined && <Link to=\"/login\" className=\"w3-bar-item  w3-right w3-button\">\n                            <span className=\"hide-mobile\">Login </span>\n                            <FontAwesomeIcon icon={faUserAlt} />\n                        </Link>}\n                    {token.token.token != undefined && <Link className=\"w3-bar-item w3-right  w3-button\" to=\"/login\" onClick={() =>{ cookie.remove('token'); cookie.remove('usuario'); token.token = cookie.loadAll(); alert('Sucesso ao deslogar'); }}>\n                            <span className=\"hide-mobile\">Logout </span>\n                            <FontAwesomeIcon icon={faUserAltSlash} />\n                        </Link> }\n                    {token.token.token != undefined && <Link to=\"/usuario\" className=\"w3-bar-tem  w3-button w3-right\" >\n                            <span className=\"hide-mobile\">Seu usuário </span>\n                            <FontAwesomeIcon icon={faUser} />\n                        </Link> }\n                    <Link to={\"/pesquisar/\"+pesquisar} className=\"w3-bar-item  w3-right w3-button\" onClick={handleClick}>\n                        <FontAwesomeIcon icon={faSearch} />\n                    </Link> \n                    <input type=\"text\" className=\" w3-right w3-bar-item  w3-input\" onChange={handleChange} id=\"pesquisar\" placeholder=\"Pesquisar ...\"/>\n                    \n                </nav>\n            </div>\n}\n\nexport default Menu","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rodape.js",[],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rotas.js",[],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Inicio.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport Cabecalho from '../Cabecalho';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTablet, faMobile, faTag } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router-dom/cjs/react-router-dom.min';\nimport cookie from 'react-cookies'\n\nfunction Inicio(props){\n    let { path, url } = useRouteMatch(); \n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n    })\n    \n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        // console.log(token);\n      })\n    \n    return  <section className=\"w3-container w3-panel\">\n                <Cabecalho titulo={props.titulo} />\n                \n                <Get url=\"http://localhost:5000/api/aplicativo/destaque/1\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"container panel w3-button w3-blue largura\"  to={\"/aplicativo/\"+valores._id}>\n                                                    <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                    <p className=\"w3-center\">{valores.slogan}</p>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                    \n                \n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/aplicativo/destaque/4\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-blue w3-display-container aplicativos\"  to={\"/aplicativo/\"+valores._id} >\n                                                    <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faMobile} />}\n                                                        {valores.nome}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/aplicativo/destaque/4\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-blue  w3-display-container aplicativos\"  to={\"/aplicativo/\"+valores._id} >\n                                                     <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faMobile} />}\n                                                        {valores.nome}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/categoria/\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-orange  w3-display-container aplicativos\"   to={\"/categoria/\"+valores._id}>\n                                                     <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faTag} />}\n                                                        {valores.categoria}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                \n            </section>\n}\n\nexport default Inicio","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Cabecalho.js",["102","103"],"import React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies'\n\nfunction Cabecalho(props){\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n    })\n    \n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n      \n    return  <header className=\"w3-container w3-panel\">\n                <h1 className=\"w3-center\">{props.titulo}</h1>\n            </header>\n}\n\nexport default Cabecalho;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Aplicativo.js",["104","105","106","107"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Cabecalho from '../Cabecalho';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard, faUserAlt } from '@fortawesome/free-solid-svg-icons';\nimport Comentarios from './Comentarios';\nimport cookie from 'react-cookies'\n\nfunction Aplicativo(props){\n    let { id } = useParams()\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n \n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n\n        console.log('token=>{',token['token'].token == undefined,'}');\n      })\n    return  <div>\n            <Cabecalho titulo={props.titulo} />\n            <Get url={\"http://localhost:5000/api/aplicativo/\"+id}>\n                {(erro, response, isLoading, makeRequest, axios) => {\n                    if(erro)return <p>Erro!</p>\n                    if(isLoading)return <p>Carregando!</p>\n                    if(response != null){\n                        let codigo = [];\n                        codigo.push(<header className=\"w3-container w3-panel\">\n                                        <h3 className=\"w3-center\">{response.data.nome}</h3>\n                                        <h4 className=\"w3-center\">{response.data.slogan}</h4>\n                                    </header>);\n                        codigo.push(<section className=\"w3-container w3-panel \">\n                                        <p className=\"w3-container w3-panel w3-justify indent\">{response.data.descricao}</p>\n                                        <div className=\"w3-row\">\n                                            <div className=\"w3-col sm12 md6 l6 w3-center\"><b>Licença:</b> {response.data.licenca} </div>\n                                            <div className=\"w3-col sm12 md6 l6 w3-center\"><b>Versão:</b> {response.data.versao} </div>\n                                        </div>\n                                        <p><b>Categorias: </b> \n                                            {response.data.categorias.map((valores, indice) => {\n                                                return  <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                            {valores.categoria}\n                                                        </Link>;\n                                            })}\n                                        </p>\n                                        <fieldset>\n                                            <legend>Comandos Snap:</legend> \n                                        {response.data.comandoSnap.map((valores, indice) =>{\n                                            return <div className=\"w3-row\">\n                                                <div className=\"w3-col sm12 md10 l10\">\n                                                    <input type=\"text\" className=\"w3-input\" id={\"comandoSnap\"+indice} disabled  value={valores} />\n                                                </div>\n                                                <div className=\"w3-col sm12 md2 l2\">\n                                                    <button className=\"w3-btn w3-block w3-blue\" onClick={() => {\n                                                        let copyText = document.querySelector('#comandoSnap'+indice);\n                                                        copyText.select();\n                                                        copyText.setSelectionRange(0, 9999);\n                                                        document.execCommand(\"copy\");\n                                                        alert('Comando copiado:'+copyText.value);\n                                                    }}>\n                                                        <FontAwesomeIcon icon={faClipboard} />\n                                                        Copiar\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        })}\n                                        </fieldset>\n                                        <fieldset>\n                                            <legend>Comando Flatpak:</legend>\n                                            <div className=\"w3-row\">\n                                                <div className=\"w3-col sm12 md10 l10\">\n                                                    <input type=\"text\" className=\"w3-input\" disabled id={\"comandoFlatpak\"} value={response.data.comandoFlatpak} />\n                                                </div>\n                                                <div className=\"w3-col sm12 md2 l2\">\n                                                    <button className=\"w3-btn w3-block w3-blue\"  onClick={() => {\n                                                        let copyText = document.querySelector('#comandoFlatpak');\n                                                        copyText.select();\n                                                        copyText.setSelectionRange(0, 9999);\n                                                        document.execCommand(\"copy\");\n                                                        alert('Comando copiado:'+copyText.value);\n                                                    }}>\n                                                        <FontAwesomeIcon icon={faClipboard} />\n                                                        Copiar\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </fieldset>\n\n                                        {token['token'].token != undefined && \n                                            <Comentarios id={response.data._id} />\n                                        }\n                                        {token['token'].token == undefined && \n                                            <p>\n                                                Faça login clicando em <Link to=\"/login\" className=\"w3-bar-item w3-blue w3-button\">\n                                                                        <span className=\"hide-mobile\">Login </span>\n                                                                        <FontAwesomeIcon icon={faUserAlt} />\n                                                                    </Link> \n                                            </p>}\n                                    </section>);\n                        return codigo;\n                    }\n                    return <p>Nem Carregou!</p>\n                }}\n            </Get>\n            </div>\n}\n\nexport default Aplicativo;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Categoria.js",["108"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Cabecalho from '../Cabecalho';\nimport cookie from 'react-cookies'\n\nfunction Categoria(props){\n    let { id } = useParams();  \n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      \n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        // console.log(token);\n      })\n\n    return  <div>\n                <Cabecalho titulo={props.titulo} />\n                <Get url={\"http://localhost:5000/api/aplicativo/categoria/\"+id}>\n                    {(erro, response, isLoading, makeRequest, axios)=>{\n                        if(erro)return <p>Erro!</p>\n                        if(isLoading)return <p>Carregando!</p>\n                        if(response != null){\n                            let codigo = [];\n                            codigo.push(<section className=\"w3-container w3-panel\">\n                                            {response.data.map((valores, erro) => {\n                                                return <div className=\"w3-container w3-panel\">\n                                                            <Link className=\"w3-button w3-tag w3-blue largura\" to={\"/aplicativo/\"+valores._id}>\n                                                                <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                                <p className=\"w3-center\">{valores.slogan}</p>\n                                                            </Link>\n                                                                \n\n                                                            <p className=\"w3-right\"><b>Categorias: </b>\n                                                                {valores.categorias.map((valores, indice) => {\n                                                                    return  <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                                                {valores.categoria}\n                                                                            </Link>\n                                                                })}\n                                                            </p>\n                                                        </div>\n                                            })}\n                                        </section>);\n                            return codigo;\n                        }\n                        return <p>Nem Carregou!</p>\n                    }}\n                </Get>\n            </div>\n}\n\nexport default Categoria;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Cadastrar.js",["109","110","111"],"import React, { useEffect, useState } from 'react';\nimport Cabecalho from '../Cabecalho';\nimport cookie from 'react-cookies';\nimport ViaCep from 'react-via-cep';\n\nfunction Cadastrar(props){\n    const [usuario, setUsuario] = useState({\n        nome: '', sobrenome: '', email: '', usuario: '', senha: '', \n        cep: '', rua: '', bairro: '', cidade: '', estado: '',tipo: [''] \n    });\n    const [token, setToken] = useState({ token: cookie.loadAll() })\n    const [cep, setCep] = useState('')\n\n    useEffect(() =>{ token['token'] = cookie.loadAll(); })\n\n    function handleChange(e){\n        if(e.target.id == 'cep')setCep(e.target.value)\n        usuario[e.target.id]=e.target.value;\n        // console.log(usuario);\n    }\n    function handleFocus(e){\n        if(e.target.id == 'cep')setCep(e.target.value)\n        usuario[e.target.id]=e.target.value;\n        // console.log(usuario);\n    }\n    \n\n    function handleClick(e){\n        usuario['cidade']=document.querySelector('#cidade').value\n        usuario['bairro']=document.querySelector('#bairro').value\n        usuario['estado']=document.querySelector('#estado').value\n        usuario['rua']=document.querySelector('#rua').value\n        usuario['tipo']= ['5fce8230cedc06a05dcdd6d6']\n        let cabecalho = { 'Content-Type': 'application/json'}\n        // console.log(usuario, cabecalho);\n\n        fetch(`http://localhost:5000/api/usuario/`,{ \n            method: 'POST', headers: cabecalho, body: JSON.stringify(usuario) \n        })\n            .then((res) => { alert('Sucesso ao executar!');  })\n            .catch((erro) => { alert('Erro ao executar!'); });\n        \n        setUsuario({\n            nome: '', sobrenome: '', email: '', usuario: '', senha: '', \n            cep: '', rua: '', bairro: '', cidade: '', estado: '',tipo: [''] \n        })\n        document.querySelector('#formulario').reset();\n    }\n\n    return  <div>\n                <Cabecalho titulo={props.titulo}/>\n\n                <section className=\"w3-container w3-panel\">\n                    <div className=\"w3-card-4\">\n                        <form id=\"formulario\">\n                            <div className=\"w3-container w3-blue\">\n                                <h2 className=\"w3-center\">Cadastrar Usuário</h2>\n                            </div>\n\n                            <div className=\"w3-container\">\n                                <label htmlFor=\"\">Nome:</label>\n                                <input type=\"text\" className=\"w3-input\"  onChange={handleChange} id=\"nome\" placeholder=\"Digite seu nome\" />\n\n                                <label htmlFor=\"\">Sobrenome:</label>\n                                <input type=\"text\" className=\"w3-input\"   onChange={handleChange}  id=\"sobrenome\" placeholder=\"Digite seu sobrenome\" />\n\n                                <br/>                                \n                                <div>\n            <fieldset>\n                <legend>Local:</legend>\n            <ViaCep cep={cep} lazy>\n                {({ data, loading, error, fetch }) => {\n                    if(data){\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\" onClick={fetch} value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" value={data.localidade} id=\"cidade\" onFocus={handleFocus}  onChange={handleChange} className=\"w3-input\" placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" value={data.logradouro} id=\"rua\"  onFocus={handleFocus} onChange={handleChange}  className=\"w3-input\"  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" value={data.bairro} id=\"bairro\"  onFocus={handleFocus}  onChange={handleChange}  className=\"w3-input\" placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" value={data.uf} id=\"estado\" onFocus={handleFocus}  onChange={handleChange} className=\"w3-input\"  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }                    \n                    if(loading) return <p>Carregando!</p>\n                    if(error){\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\"  onClick={fetch} value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"cidade\" onFocus={handleFocus} onChange={handleChange} placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"rua\" onFocus={handleFocus}   onChange={handleChange}  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"bairro\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"estado\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }    \n                    else{\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\" onClick={fetch}  value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"cidade\" onFocus={handleFocus}  onChange={handleChange} placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"rua\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"bairro\"  onFocus={handleFocus} onChange={handleChange} placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"estado\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }    \n                }}\n            </ViaCep>\n            </fieldset>\n        </div>\n                                <br/>\n\n                                <label htmlFor=\"\">Email:</label>\n                                <input type=\"email\" className=\"w3-input\"    onChange={handleChange} id=\"email\" placeholder=\"Digite seu email\" />\n                                                                \n                                <label htmlFor=\"\">Usuário:</label>\n                                <input type=\"text\" className=\"w3-input\"   onChange={handleChange}  id=\"usuario\" placeholder=\"Digite o usuário\" />\n\n                                <label htmlFor=\"\">Senha:</label>\n                                <input type=\"password\" className=\"w3-input\"   onChange={handleChange}  id=\"senha\" placeholder=\"Digite sua senha\" />\n                               \n                                \n\n\n                                <input type=\"hidden\" value=\"tipo\"    onChange={handleChange} id=\"tipo\"  />\n                            </div>\n\n                            <input type=\"submit\" className=\"w3-btn w3-block w3-green\" value=\"salvar\" onClick={handleClick} />\n                        </form>\n                        \n                    </div>\n                </section>\n            </div>\n}\n\nexport default Cadastrar;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Comentarios.js",["112","113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\nimport cookie from 'react-cookies'\nimport firebase from 'firebase'\nimport { FirestoreCollection, FirestoreDocument, FirestoreProvider } from '@react-firebase/firestore'\n\nfunction Comentarios(props){\n    const [comentario, setComentario] = useState(\n        {nome: '', email: '', aplicativo: '', classificacao: '', comentario: ''} \n    );\n    const [isRecarregar, setRecarregar] = useState(true)\n    \n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      const [usuario, setUsuario] = useState({\n        usuario: JSON.parse(token['token'].usuario).usuario,\n        senha: JSON.parse(token['token'].usuario).senha\n      })      \n  \n      const config = {\n        apiKey: \"AIzaSyAm4hQ2zN1niprt4gH6ETZuK3cWAhI9geI\",\n        projectId: \"eagle-store-3faa1\",\n        databaseURL: \"https://eagle-store-3faa1.firebaseio.com\",\n        authDomain: \"eagle-store-3faa1.firebaseapp.com\",\n        // OPTIONAL\n        storageBucket: \"eagle-store-3faa1.appspot.com\",\n        messagingSenderId: \"435483528196\"\n      };\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n\n        // console.log('log: ', JSON.parse(token.token['usuario']), usuario, token.token['token']); \n      })\n\n    function handleChange(e) {\n        comentario[e.target.id]=e.target.value;\n        setRecarregar(false)\n        // console.log(comentario);\n    }\n\n    function handleClick(e) {\n        comentario['nome']=JSON.parse(token.token['usuario']).nome;\n        comentario['email']=JSON.parse(token.token['usuario']).email;\n        comentario['aplicativo']=document.querySelector('#aplicativo').value;\n        let cabecalho = { 'Content-Type': 'application/json', 'x-access-token': token.token['token'] };\n        // console.log(comentario, cabecalho);\n\n            fetch(`http://localhost:5000/api/comentario/`, {\n                method: 'POST', headers: cabecalho, body: JSON.stringify(comentario)\n            })\n                .then((res) => {alert('Sucesso ao executar!')})\n                .catch((erro) => {alert('erro ao executar!')})\n        setComentario({nome: '', email: '', aplicativo: '', classificacao: '', comentario: ''} )\n        document.querySelector('#formulario').reset()\n        setRecarregar(true)\n\n    }\n\n    return  <div>\n\n\n                <form id=\"formulario\" className=\"w3-container w3-panel\">\n                    <div className=\"w3-row-padding\">\n                        {/* <div className=\"w3-half\">\n                            <label id=\"nome\">Nome:</label>\n                            <input type=\"text\" className=\"w3-input\" required onChange={handleChange} id=\"nome\" placeholder=\"Digite seu nome\" />       \n                        </div>\n                        <div className=\"w3-half\">\n                            <label id=\"email\">Email:</label>\n                            <input type=\"email\" className=\"w3-input\" required onChange={handleChange} id=\"email\" placeholder=\"Digite seu email\" /> \n                        </div> */}\n                    </div>\n\n                    <label id=\"classificacao\">Classifique o app:</label>\n                    <FirestoreProvider {...config} firebase={firebase}>\n                        <FirestoreCollection path=\"/classificacao/\" >\n                            {data => { \n                                // console.log(data.value);\n                                if (data.value != undefined){\n                                    return data.isLoading ? \"Carregando\" : <select className=\"w3-select\" required id=\"classificacao\" onChange={handleChange} >\n                                                                                {data.value.map((valor, indice) => {\n                                                                                    return <option value={valor.id}>{valor.valor}</option>\n                                                                                })}\n                                                                            </select>\n                                }\n                                else {\n                                    return <select className=\"w3-select\" required id=\"classificacao\" onChange={handleChange} >\n                                                <option value=\"0\">Muito Ruim</option>\n                                                <option value=\"1\">Ruim</option>\n                                                <option value=\"2\">Medio</option>\n                                                <option value=\"3\">Bom</option>\n                                                <option value=\"4\">Muito Bom</option>\n                                            </select>\n                                } \n                            }}\n                        </FirestoreCollection>       \n                    </FirestoreProvider>\n\n                    \n\n                    <label id=\"comentario\">Comentário:</label>\n                    <textarea className=\"w3-input\"  onChange={handleChange} required id=\"comentario\" cols=\"50\" rows=\"20\" placeholder=\"Digite sua reclamação ou elogio aqui\"></textarea>\n\n                    <input type=\"hidden\" id=\"aplicativo\" value={props.id} />\n\n                    <input type=\"submit\" onClick={handleClick} className=\"w3-btn w3-block w3-green\" value=\"salvar\"  />\n                              \n                </form>\n                <section className=\"w3-container w3-panel\">\n                    {isRecarregar == true &&\n                        <Get  url={\"http://localhost:5000/api/comentario/aplicativo/\"+props.id} >\n                        {(erro, response, isLoading, makeRequest, axios) => {\n                            if(erro) return <p>Erro!</p>\n                            if(isLoading) return <p> Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                codigo.push(\n                                        response.data.map((valores, indice)=>{\n                                            return <article className=\"w3-container w3-panel\">\n                                                <p><b>Nome:</b> {valores.nome}  </p>\n                                                <p><b>Email:</b> {valores.email} </p>\n                                                <p><b>Comentário:</b> {valores.comentario} </p>\n                                                <p><b>Satisfação: </b> \n                                                    {valores.classificacao == 0 && <span className=\"w3-text-red\"><FontAwesomeIcon icon={faStar} /> </span>}\n                                                    {valores.classificacao == 1 && <span className=\"w3-text-yellow\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 2 && <span className=\"w3-text-black\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 3 && <span className=\"w3-text-blue\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 4 && <span className=\"w3-text-green\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                </p>\n                                                <hr/>\n                                            </article>\n                                        })\n                                        \n                                );\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>}\n                </section>\n            </div>\n}\n\nexport default Comentarios;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Login.js",["123","124","125"],"import React, { useEffect, useState } from 'react'\nimport Cabecalho from '../Cabecalho'\nimport {Link} from 'react-router-dom'\nimport cookie from 'react-cookies'\n\nfunction Login(props){\n    const [usuario, setUsuario] = useState(\n        {usuario: '', senha: ''}\n    );\n    const [log, setLog] = useState({\n        log: ''\n    })\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n     \n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        // console.log(token);\n      })\n\n    function handleChange(e) {\n        usuario[e.target.id] = e.target.value;\n        // console.log(usuario);\n        // console.log(log);\n    }\n\n    function handleClick(e) {\n        let cabecalho = { 'Content-Type': 'application/json' };\n        // console.log(usuario, cabecalho);\n        // console.log(log);\n        \n\n        fetch(`http://localhost:5000/api/login/`,{\n            method: 'POST', headers: cabecalho, body: JSON.stringify(usuario)\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                cookie.save('token', data.token)\n                cookie.save('usuario', data.usuario)\n                alert('Sucesso ao logar')\n            })\n            .catch((erro) => {\n                cookie.remove('token')\n                cookie.remove('usuario')\n                alert('Erro ao executar!')\n            })\n\n        \n        setUsuario({usuario: '', senha: ''})\n        document.querySelector('#formulario').reset();\n    }\n\n\n    return  <div>\n                <Cabecalho titulo={props.titulo} />\n\n                <section className=\"w3-container w3-panel\">\n                    <div className=\"w3-card-4\">\n                        <form id=\"formulario\">\n                            <div className=\"w3-container w3-blue\">\n                                <h2 className=\"w3-center\">Login</h2>\n                            </div>\n\n                            <div className=\"w3-container w3-panel\">\n                                <label htmlFor=\"\">Usuário:</label>\n                                <input type=\"text\" className=\"w3-input\"  onChange={handleChange} id=\"usuario\" placeholder=\"Digite seu nome\" />\n\n                                <label htmlFor=\"\">Senha:</label>\n                                <input type=\"password\" className=\"w3-input\"   onChange={handleChange}  id=\"senha\" placeholder=\"Digite sua senha\" />\n                            </div>\n                            <input type=\"submit\" className=\"w3-btn w3-block w3-green\" value=\"Salvar\" onClick={handleClick} /> \n                        </form>\n                    </div>\n                </section>\n\n\n                <section className=\"w3-container w3-panel\">\n                    <p>Ainda não é cadastrado? </p>\n                    <p>Faça seu cadadastro <Link to=\"/cadastrar\" className=\"w3-text-blue\">aqui</Link></p>\n                </section>\n            </div>\n}\n\nexport default Login","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Pesquisar.js",["126","127","128"],"import { func } from 'prop-types'\nimport  React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Get } from 'react-axios'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport Cabecalho from '../Cabecalho'\nimport cookie from 'react-cookies'\n\nfunction Pesquisar(props){\n    let { id } = useParams()\n\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n\n    \n    \n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        // console.log(token);\n      })\n      \n    return  <section className=\"w3-container w3-panel\">\n                <Cabecalho titulo={props.titulo} />\n\n                <Get url={\"http://localhost:5000/api/aplicativo/pesquisar/\"+id} >\n                    {(erro, response, isLoading, makeRequest, axios)=>{\n                        if(erro)return <p>Erro!</p>\n                        if(isLoading)return <p>Carregando!</p>\n                        if(response != null && response.data.length == 0) return <p> Nenhum aplicativo foi encontrado!</p>\n                        if(response != null){\n                            let codigo = []\n                            codigo.push(<section className=\"w3-container w3-panel\">\n                                            \n                                            {response.data.map((valores, erro) => {\n                                                return <div className=\"w3-container w3-panel\">\n                                                            <Link className=\"w3-button w3-blue largura\" to={\"/aplicativo/\"+valores._id}>\n                                                                <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                                <p className=\"w3-center\">{valores.slogan}</p>\n                                                            </Link>\n\n                                                            <p className=\"w3-rigth\"><b>Categorias</b>\n                                                                {valores.categorias.map((valores, indice) => {\n                                                                    return <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                                                {valores.categoria}\n                                                                            </Link>\n                                                                })}\n                                                            </p>\n                                                        </div>\n                                            })}\n                                        </section>)\n                            return codigo\n                        }\n                        return <p>Não aconteceu nada!</p>\n                    }}\n                </Get>\n            </section>\n}\n\nexport default Pesquisar","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Usuario.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":12},{"ruleId":"160","severity":1,"message":"164","line":11,"column":17,"nodeType":"162","messageId":"163","endLine":11,"endColumn":25},{"ruleId":"160","severity":1,"message":"165","line":11,"column":10,"nodeType":"162","messageId":"163","endLine":11,"endColumn":14},{"ruleId":"160","severity":1,"message":"166","line":11,"column":17,"nodeType":"162","messageId":"163","endLine":11,"endColumn":20},{"ruleId":"160","severity":1,"message":"164","line":13,"column":19,"nodeType":"162","messageId":"163","endLine":13,"endColumn":27},{"ruleId":"160","severity":1,"message":"167","line":27,"column":14,"nodeType":"162","messageId":"163","endLine":27,"endColumn":32},{"ruleId":"168","severity":1,"message":"169","line":49,"column":53,"nodeType":"170","endLine":49,"endColumn":99},{"ruleId":"168","severity":1,"message":"169","line":50,"column":57,"nodeType":"170","endLine":50,"endColumn":103},{"ruleId":"171","severity":1,"message":"172","line":53,"column":75,"nodeType":"173","messageId":"174","endLine":53,"endColumn":77},{"ruleId":"168","severity":1,"message":"169","line":58,"column":44,"nodeType":"170","endLine":58,"endColumn":89},{"ruleId":"175","severity":1,"message":"176","line":64,"column":40,"nodeType":"177","messageId":"178","endLine":64,"endColumn":42},{"ruleId":"175","severity":1,"message":"179","line":68,"column":40,"nodeType":"177","messageId":"178","endLine":68,"endColumn":42},{"ruleId":"175","severity":1,"message":"179","line":72,"column":40,"nodeType":"177","messageId":"178","endLine":72,"endColumn":42},{"ruleId":"160","severity":1,"message":"180","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"165","line":11,"column":11,"nodeType":"162","messageId":"163","endLine":11,"endColumn":15},{"ruleId":"160","severity":1,"message":"166","line":11,"column":17,"nodeType":"162","messageId":"163","endLine":11,"endColumn":20},{"ruleId":"160","severity":1,"message":"164","line":12,"column":19,"nodeType":"162","messageId":"163","endLine":12,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":31,"column":70,"nodeType":"173","messageId":"174","endLine":31,"endColumn":72},{"ruleId":"171","severity":1,"message":"172","line":51,"column":70,"nodeType":"173","messageId":"174","endLine":51,"endColumn":72},{"ruleId":"175","severity":1,"message":"179","line":54,"column":73,"nodeType":"177","messageId":"178","endLine":54,"endColumn":75},{"ruleId":"175","severity":1,"message":"176","line":55,"column":73,"nodeType":"177","messageId":"178","endLine":55,"endColumn":75},{"ruleId":"171","severity":1,"message":"172","line":73,"column":70,"nodeType":"173","messageId":"174","endLine":73,"endColumn":72},{"ruleId":"175","severity":1,"message":"179","line":76,"column":73,"nodeType":"177","messageId":"178","endLine":76,"endColumn":75},{"ruleId":"175","severity":1,"message":"176","line":77,"column":73,"nodeType":"177","messageId":"178","endLine":77,"endColumn":75},{"ruleId":"171","severity":1,"message":"172","line":95,"column":70,"nodeType":"173","messageId":"174","endLine":95,"endColumn":72},{"ruleId":"175","severity":1,"message":"179","line":98,"column":73,"nodeType":"177","messageId":"178","endLine":98,"endColumn":75},{"ruleId":"175","severity":1,"message":"176","line":99,"column":73,"nodeType":"177","messageId":"178","endLine":99,"endColumn":75},{"ruleId":"160","severity":1,"message":"164","line":5,"column":19,"nodeType":"162","messageId":"163","endLine":5,"endColumn":27},{"ruleId":"160","severity":1,"message":"167","line":9,"column":14,"nodeType":"162","messageId":"163","endLine":9,"endColumn":32},{"ruleId":"160","severity":1,"message":"164","line":13,"column":19,"nodeType":"162","messageId":"163","endLine":13,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":21,"column":53,"nodeType":"177","messageId":"178","endLine":21,"endColumn":55},{"ruleId":"175","severity":1,"message":"179","line":91,"column":63,"nodeType":"177","messageId":"178","endLine":91,"endColumn":65},{"ruleId":"175","severity":1,"message":"176","line":94,"column":63,"nodeType":"177","messageId":"178","endLine":94,"endColumn":65},{"ruleId":"160","severity":1,"message":"164","line":10,"column":19,"nodeType":"162","messageId":"163","endLine":10,"endColumn":27},{"ruleId":"160","severity":1,"message":"164","line":11,"column":19,"nodeType":"162","messageId":"163","endLine":11,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":17,"column":24,"nodeType":"177","messageId":"178","endLine":17,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":22,"column":24,"nodeType":"177","messageId":"178","endLine":22,"endColumn":26},{"ruleId":"160","severity":1,"message":"181","line":7,"column":31,"nodeType":"162","messageId":"163","endLine":7,"endColumn":48},{"ruleId":"160","severity":1,"message":"164","line":15,"column":19,"nodeType":"162","messageId":"163","endLine":15,"endColumn":27},{"ruleId":"160","severity":1,"message":"182","line":19,"column":14,"nodeType":"162","messageId":"163","endLine":19,"endColumn":21},{"ruleId":"160","severity":1,"message":"183","line":19,"column":23,"nodeType":"162","messageId":"163","endLine":19,"endColumn":33},{"ruleId":"175","severity":1,"message":"179","line":84,"column":48,"nodeType":"177","messageId":"178","endLine":84,"endColumn":50},{"ruleId":"175","severity":1,"message":"176","line":115,"column":35,"nodeType":"177","messageId":"178","endLine":115,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":129,"column":76,"nodeType":"177","messageId":"178","endLine":129,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":130,"column":76,"nodeType":"177","messageId":"178","endLine":130,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":131,"column":76,"nodeType":"177","messageId":"178","endLine":131,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":132,"column":76,"nodeType":"177","messageId":"178","endLine":132,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":133,"column":76,"nodeType":"177","messageId":"178","endLine":133,"endColumn":78},{"ruleId":"160","severity":1,"message":"184","line":10,"column":12,"nodeType":"162","messageId":"163","endLine":10,"endColumn":15},{"ruleId":"160","severity":1,"message":"185","line":10,"column":17,"nodeType":"162","messageId":"163","endLine":10,"endColumn":23},{"ruleId":"160","severity":1,"message":"164","line":13,"column":19,"nodeType":"162","messageId":"163","endLine":13,"endColumn":27},{"ruleId":"160","severity":1,"message":"186","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":14},{"ruleId":"160","severity":1,"message":"164","line":12,"column":19,"nodeType":"162","messageId":"163","endLine":12,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":31,"column":69,"nodeType":"177","messageId":"178","endLine":31,"endColumn":71},{"ruleId":"160","severity":1,"message":"164","line":10,"column":19,"nodeType":"162","messageId":"163","endLine":10,"endColumn":27},{"ruleId":"160","severity":1,"message":"183","line":13,"column":21,"nodeType":"162","messageId":"163","endLine":13,"endColumn":31},{"ruleId":"160","severity":1,"message":"187","line":18,"column":17,"nodeType":"162","messageId":"163","endLine":18,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":42,"column":7,"nodeType":"190","messageId":"191","endLine":51,"endColumn":8},{"ruleId":"188","severity":1,"message":"189","line":57,"column":7,"nodeType":"190","messageId":"191","endLine":66,"endColumn":8},{"ruleId":"160","severity":1,"message":"192","line":72,"column":11,"nodeType":"162","messageId":"163","endLine":72,"endColumn":20},{"ruleId":"175","severity":1,"message":"179","line":105,"column":78,"nodeType":"177","messageId":"178","endLine":105,"endColumn":80},{"ruleId":"175","severity":1,"message":"176","line":109,"column":76,"nodeType":"177","messageId":"178","endLine":109,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":114,"column":76,"nodeType":"177","messageId":"178","endLine":114,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":118,"column":76,"nodeType":"177","messageId":"178","endLine":118,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":123,"column":76,"nodeType":"177","messageId":"178","endLine":123,"endColumn":78},{"ruleId":"175","severity":1,"message":"176","line":127,"column":76,"nodeType":"177","messageId":"178","endLine":127,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":132,"column":77,"nodeType":"177","messageId":"178","endLine":132,"endColumn":79},{"ruleId":"175","severity":1,"message":"179","line":134,"column":76,"nodeType":"177","messageId":"178","endLine":134,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":138,"column":76,"nodeType":"177","messageId":"178","endLine":138,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":141,"column":77,"nodeType":"177","messageId":"178","endLine":141,"endColumn":79},{"ruleId":"175","severity":1,"message":"179","line":142,"column":76,"nodeType":"177","messageId":"178","endLine":142,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":146,"column":76,"nodeType":"177","messageId":"178","endLine":146,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":149,"column":74,"nodeType":"177","messageId":"178","endLine":149,"endColumn":76},{"ruleId":"175","severity":1,"message":"179","line":150,"column":76,"nodeType":"177","messageId":"178","endLine":150,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":154,"column":76,"nodeType":"177","messageId":"178","endLine":154,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":157,"column":77,"nodeType":"177","messageId":"178","endLine":157,"endColumn":79},{"ruleId":"175","severity":1,"message":"179","line":158,"column":76,"nodeType":"177","messageId":"178","endLine":158,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":162,"column":76,"nodeType":"177","messageId":"178","endLine":162,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":165,"column":74,"nodeType":"177","messageId":"178","endLine":165,"endColumn":76},{"ruleId":"175","severity":1,"message":"179","line":167,"column":76,"nodeType":"177","messageId":"178","endLine":167,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":171,"column":76,"nodeType":"177","messageId":"178","endLine":171,"endColumn":78},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'componentWillMount' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'faTablet' is defined but never used.","'FirestoreDocument' is defined but never used.","'usuario' is assigned a value but never used.","'setUsuario' is assigned a value but never used.","'log' is assigned a value but never used.","'setLog' is assigned a value but never used.","'func' is defined but never used.","'setUsr' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'cabecalho' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]