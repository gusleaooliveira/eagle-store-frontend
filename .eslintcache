[{"/home/gustavo/Documentos/GitHub/eagle/frontend/src/index.js":"1","/home/gustavo/Documentos/GitHub/eagle/frontend/src/App.js":"2","/home/gustavo/Documentos/GitHub/eagle/frontend/src/reportWebVitals.js":"3","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Menu.js":"4","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rodape.js":"5","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rotas.js":"6","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Inicio.js":"7","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Cabecalho.js":"8","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Aplicativo.js":"9","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Categoria.js":"10","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Cadastrar.js":"11","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Comentarios.js":"12","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Login.js":"13","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Pesquisar.js":"14","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Usuario.js":"15"},{"size":500,"mtime":1607226781389,"results":"16","hashOfConfig":"17"},{"size":606,"mtime":1607440232575,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607226781393,"results":"19","hashOfConfig":"17"},{"size":4332,"mtime":1607922669160,"results":"20","hashOfConfig":"17"},{"size":1496,"mtime":1607832338750,"results":"21","hashOfConfig":"17"},{"size":1694,"mtime":1607922352691,"results":"22","hashOfConfig":"17"},{"size":6369,"mtime":1607832302523,"results":"23","hashOfConfig":"17"},{"size":563,"mtime":1607832328091,"results":"24","hashOfConfig":"17"},{"size":6241,"mtime":1607832270667,"results":"25","hashOfConfig":"17"},{"size":2837,"mtime":1607832282399,"results":"26","hashOfConfig":"17"},{"size":9406,"mtime":1607920694233,"results":"27","hashOfConfig":"17"},{"size":6074,"mtime":1607832531241,"results":"28","hashOfConfig":"17"},{"size":3002,"mtime":1607901400641,"results":"29","hashOfConfig":"17"},{"size":3037,"mtime":1607832315403,"results":"30","hashOfConfig":"17"},{"size":2411,"mtime":1607902573307,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xa6r3f",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"/home/gustavo/Documentos/GitHub/eagle/frontend/src/index.js",[],["74","75"],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/App.js",["76","77"],"import logo from './logo.svg';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Rotas from './components/Rotas';\nimport Rodape from './components/Rodape';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport cookie from 'react-cookies'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [token, setToken] = useState({\n    token: cookie.loadAll()\n  })\n\n  useEffect(() =>{\n    console.log(token);\n  })\n\n  return (\n    <div>\n        <Router>\n          <Menu />\n          <Rotas />\n          <Rodape />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gustavo/Documentos/GitHub/eagle/frontend/src/reportWebVitals.js",[],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Menu.js",["78","79","80","81","82","83","84","85","86","87","88"],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rodape.js",["89","90"],"import React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies'\n\nfunction Rodape(props) {\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n      \n    return  <footer className=\"w3-container w3-painel w3-light-gray\">\n                <div className=\"w3-row\">\n                    <div className=\"w3-col m4 l3\">\n                        <p className=\"w3-center\">\n                            Criado por <a href=\"https://www.linktree.com.br/gusleaooliveira\" className=\"w3-text-blue\">Gustavo Le√£o.</a>\n                        </p>\n                    </div>\n                    <div className=\"w3-col m8 l9\">\n                        <p className=\"w3-center\">\n                            Redes sociais e meus sites:\n                        </p>\n                        <ul>\n                            <li><a href=\"https://github.com/gusleaooliveira\" className=\"w3-text-blue\">Github</a></li>\n                            <li><a href=\"mailto:gus.leaono@gmail.com\" className=\"w3-text-blue\">Gmail</a></li>\n                            <li><a href=\"https://gusleaooliveira.github.io/posts/\" className=\"w3-text-blue\">Posts</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </footer>\n}\n\nexport default Rodape;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Rotas.js",["91","92","93","94"],"/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Inicio.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport Cabecalho from '../Cabecalho';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTablet, faMobile, faTag } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router-dom/cjs/react-router-dom.min';\nimport cookie from 'react-cookies'\n\nfunction Inicio(props){\n    let { path, url } = useRouteMatch(); \n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n    })\n    \n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n    \n    return  <section className=\"w3-container w3-panel\">\n                <Cabecalho titulo={props.titulo} />\n                \n                <Get url=\"http://localhost:5000/api/aplicativo/destaque/1\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"container panel w3-button w3-blue largura\"  to={\"/aplicativo/\"+valores._id}>\n                                                    <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                    <p className=\"w3-center\">{valores.slogan}</p>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                    \n                \n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/aplicativo/destaque/4\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-blue w3-display-container aplicativos\"  to={\"/aplicativo/\"+valores._id} >\n                                                    <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faMobile} />}\n                                                        {valores.nome}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/aplicativo/destaque/4\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-blue  w3-display-container aplicativos\"  to={\"/aplicativo/\"+valores._id} >\n                                                     <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faMobile} />}\n                                                        {valores.nome}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                <div className=\"w3-row\">\n                    <Get url=\"http://localhost:5000/api/categoria/\">\n                        {(erro,response, isLoading, makeRequest, axios)=>{\n                            if(erro)return <p>Erro!</p>\n                            if(isLoading)return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                response.data.map((valores, indices) => {\n                                    codigo.push(<Link className=\"w3-col m6  l3 w3-button w3-orange  w3-display-container aplicativos\"   to={\"/categoria/\"+valores._id}>\n                                                     <span className=\"w3-display-middle\">\n                                                        {valores.imagem != undefined && <FontAwesomeIcon icon={valores.icone} />}\n                                                        {valores.imagem == undefined && <FontAwesomeIcon icon={faTag} />}\n                                                        {valores.categoria}\n                                                    </span>\n                                                </Link>); \n                                });\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                </div>\n                \n            </section>\n}\n\nexport default Inicio","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/Cabecalho.js",["110","111"],"import React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies'\n\nfunction Cabecalho(props){\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n    })\n    \n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n      \n    return  <header className=\"w3-container w3-panel\">\n                <h1 className=\"w3-center\">{props.titulo}</h1>\n            </header>\n}\n\nexport default Cabecalho;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Aplicativo.js",["112","113"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Cabecalho from '../Cabecalho';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport Comentarios from './Comentarios';\nimport cookie from 'react-cookies'\n\nfunction Aplicativo(props){\n    let { id } = useParams()\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n    return  <div>\n            <Cabecalho titulo={props.titulo} />\n            <Get url={\"http://localhost:5000/api/aplicativo/\"+id}>\n                {(erro, response, isLoading, makeRequest, axios) => {\n                    if(erro)return <p>Erro!</p>\n                    if(isLoading)return <p>Carregando!</p>\n                    if(response != null){\n                        let codigo = [];\n                        codigo.push(<header className=\"w3-container w3-panel\">\n                                        <h3 className=\"w3-center\">{response.data.nome}</h3>\n                                        <h4 className=\"w3-center\">{response.data.slogan}</h4>\n                                    </header>);\n                        codigo.push(<section className=\"w3-container w3-panel \">\n                                        <p className=\"w3-container w3-panel w3-justify indent\">{response.data.descricao}</p>\n                                        <div className=\"w3-row\">\n                                            <div className=\"w3-col sm12 md6 l6 w3-center\"><b>Licen√ßa:</b> {response.data.licenca} </div>\n                                            <div className=\"w3-col sm12 md6 l6 w3-center\"><b>Vers√£o:</b> {response.data.versao} </div>\n                                        </div>\n                                        <p><b>Categorias: </b> \n                                            {response.data.categorias.map((valores, indice) => {\n                                                return  <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                            {valores.categoria}\n                                                        </Link>;\n                                            })}\n                                        </p>\n                                        <fieldset>\n                                            <legend>Comandos Snap:</legend> \n                                        {response.data.comandoSnap.map((valores, indice) =>{\n                                            return <div className=\"w3-row\">\n                                                <div className=\"w3-col sm12 md10 l10\">\n                                                    <input type=\"text\" className=\"w3-input\" id={\"comandoSnap\"+indice} disabled  value={valores} />\n                                                </div>\n                                                <div className=\"w3-col sm12 md2 l2\">\n                                                    <button className=\"w3-btn w3-block w3-blue\" onClick={() => {\n                                                        let copyText = document.querySelector('#comandoSnap'+indice);\n                                                        copyText.select();\n                                                        copyText.setSelectionRange(0, 9999);\n                                                        document.execCommand(\"copy\");\n                                                        alert('Comando copiado:'+copyText.value);\n                                                    }}>\n                                                        <FontAwesomeIcon icon={faClipboard} />\n                                                        Copiar\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        })}\n                                        </fieldset>\n                                        <fieldset>\n                                            <legend>Comando Flatpak:</legend>\n                                            <div className=\"w3-row\">\n                                                <div className=\"w3-col sm12 md10 l10\">\n                                                    <input type=\"text\" className=\"w3-input\" disabled id={\"comandoFlatpak\"} value={response.data.comandoFlatpak} />\n                                                </div>\n                                                <div className=\"w3-col sm12 md2 l2\">\n                                                    <button className=\"w3-btn w3-block w3-blue\"  onClick={() => {\n                                                        let copyText = document.querySelector('#comandoFlatpak');\n                                                        copyText.select();\n                                                        copyText.setSelectionRange(0, 9999);\n                                                        document.execCommand(\"copy\");\n                                                        alert('Comando copiado:'+copyText.value);\n                                                    }}>\n                                                        <FontAwesomeIcon icon={faClipboard} />\n                                                        Copiar\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </fieldset>\n\n                                        <Comentarios id={response.data._id} />\n                                    </section>);\n                        return codigo;\n                    }\n                    return <p>Nem Carregou!</p>\n                }}\n            </Get>\n            </div>\n}\n\nexport default Aplicativo;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Categoria.js",["114","115"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Cabecalho from '../Cabecalho';\nimport cookie from 'react-cookies'\n\nfunction Categoria(props){\n    let { id } = useParams();  \n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n\n    return  <div>\n                <Cabecalho titulo={props.titulo} />\n                <Get url={\"http://localhost:5000/api/aplicativo/categoria/\"+id}>\n                    {(erro, response, isLoading, makeRequest, axios)=>{\n                        if(erro)return <p>Erro!</p>\n                        if(isLoading)return <p>Carregando!</p>\n                        if(response != null){\n                            let codigo = [];\n                            codigo.push(<section className=\"w3-container w3-panel\">\n                                            {response.data.map((valores, erro) => {\n                                                return <div className=\"w3-container w3-panel\">\n                                                            <Link className=\"w3-button w3-tag w3-blue largura\" to={\"/aplicativo/\"+valores._id}>\n                                                                <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                                <p className=\"w3-center\">{valores.slogan}</p>\n                                                            </Link>\n                                                                \n\n                                                            <p className=\"w3-right\"><b>Categorias: </b>\n                                                                {valores.categorias.map((valores, indice) => {\n                                                                    return  <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                                                {valores.categoria}\n                                                                            </Link>\n                                                                })}\n                                                            </p>\n                                                        </div>\n                                            })}\n                                        </section>);\n                            return codigo;\n                        }\n                        return <p>Nem Carregou!</p>\n                    }}\n                </Get>\n            </div>\n}\n\nexport default Categoria;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Cadastrar.js",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\nimport Cabecalho from '../Cabecalho';\nimport cookie from 'react-cookies';\nimport ViaCep from 'react-via-cep';\n\nfunction Cadastrar(props){\n    const [usuario, setUsuario] = useState({\n        nome: '', sobrenome: '', email: '', usuario: '', senha: '', \n        cep: '', rua: '', bairro: '', cidade: '', estado: '',tipo: [''] \n    });\n    const [token, setToken] = useState({ token: cookie.loadAll() })\n    const [cep, setCep] = useState('')\n\n    function componentWillMount() { token['token'] = cookie.loadAll(); }\n\n    useEffect(() =>{ token['token'] = cookie.loadAll(); })\n\n    function handleChange(e){\n        if(e.target.id == 'cep')setCep(e.target.value)\n        usuario[e.target.id]=e.target.value;\n        console.log(usuario);\n    }\n    function handleFocus(e){\n        if(e.target.id == 'cep')setCep(e.target.value)\n        usuario[e.target.id]=e.target.value;\n        console.log(usuario);\n    }\n    \n\n    function handleClick(e){\n        usuario['cidade']=document.querySelector('#cidade').value\n        usuario['bairro']=document.querySelector('#bairro').value\n        usuario['estado']=document.querySelector('#estado').value\n        usuario['rua']=document.querySelector('#rua').value\n        usuario['tipo']= ['5fce8230cedc06a05dcdd6d6']\n        let cabecalho = { 'Content-Type': 'application/json'}\n        console.log(usuario, cabecalho);\n\n        fetch(`http://localhost:5000/api/usuario/`,{ \n            method: 'POST', headers: cabecalho, body: JSON.stringify(usuario) \n        })\n            .then((res) => { alert('Sucesso ao executar!');  })\n            .catch((erro) => { alert('Erro ao executar!'); });\n        \n        setUsuario({\n            nome: '', sobrenome: '', email: '', usuario: '', senha: '', \n            cep: '', rua: '', bairro: '', cidade: '', estado: '',tipo: [''] \n        })\n        document.querySelector('#formulario').reset();\n    }\n\n    return  <div>\n                <Cabecalho titulo={props.titulo}/>\n\n                <section className=\"w3-container w3-panel\">\n                    <div className=\"w3-card-4\">\n                        <form id=\"formulario\">\n                            <div className=\"w3-container w3-blue\">\n                                <h2 className=\"w3-center\">Cadastrar Usu√°rio</h2>\n                            </div>\n\n                            <div className=\"w3-container\">\n                                <label htmlFor=\"\">Nome:</label>\n                                <input type=\"text\" className=\"w3-input\"  onChange={handleChange} id=\"nome\" placeholder=\"Digite seu nome\" />\n\n                                <label htmlFor=\"\">Sobrenome:</label>\n                                <input type=\"text\" className=\"w3-input\"   onChange={handleChange}  id=\"sobrenome\" placeholder=\"Digite seu sobrenome\" />\n\n                                <br/>                                \n                                <div>\n            <fieldset>\n                <legend>Local:</legend>\n            <ViaCep cep={cep} lazy>\n                {({ data, loading, error, fetch }) => {\n                    if(data){\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\" onClick={fetch} value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" value={data.localidade} id=\"cidade\" onFocus={handleFocus}  onChange={handleChange} className=\"w3-input\" placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" value={data.logradouro} id=\"rua\"  onFocus={handleFocus} onChange={handleChange}  className=\"w3-input\"  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" value={data.bairro} id=\"bairro\"  onFocus={handleFocus}  onChange={handleChange}  className=\"w3-input\" placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" value={data.uf} id=\"estado\" onFocus={handleFocus}  onChange={handleChange} className=\"w3-input\"  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }                    \n                    if(loading) return <p>Carregando!</p>\n                    if(error){\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\"  onClick={fetch} value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"cidade\" onFocus={handleFocus} onChange={handleChange} placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"rua\" onFocus={handleFocus}   onChange={handleChange}  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"bairro\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"estado\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }    \n                    else{\n                        return <div>\n                                    <div>\n                                        <label htmlFor=\"\">Cep:</label>\n                                        <input type=\"text\" id=\"cep\" onChange={handleChange} value={cep} className=\"w3-input\" placeholder=\"Digite o cep\" />\n                                        <input type=\"submit\" className=\"w3-btn w3-block w3-blue\" onClick={fetch}  value=\"Carregar\" />\n                                    </div>\n\n                                    <label htmlFor=\"\">Cidade:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"cidade\" onFocus={handleFocus}  onChange={handleChange} placeholder=\"Cidade\" />\n\n                                    <label htmlFor=\"\">Rua:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"rua\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Rua ou Avenida\" />\n\n                                    <label htmlFor=\"\">Bairro:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"bairro\"  onFocus={handleFocus} onChange={handleChange} placeholder=\"Bairro\" />\n                                    \n                                    <label htmlFor=\"\">Estado:</label>\n                                    <input type=\"text\" className=\"w3-input\" id=\"estado\"  onFocus={handleFocus} onChange={handleChange}  placeholder=\"Estado\" />                                       \n                                    \n                                </div>\n                    }    \n                }}\n            </ViaCep>\n            </fieldset>\n        </div>\n                                <br/>\n\n                                <label htmlFor=\"\">Email:</label>\n                                <input type=\"email\" className=\"w3-input\"    onChange={handleChange} id=\"email\" placeholder=\"Digite seu email\" />\n                                                                \n                                <label htmlFor=\"\">Usu√°rio:</label>\n                                <input type=\"text\" className=\"w3-input\"   onChange={handleChange}  id=\"usuario\" placeholder=\"Digite o usu√°rio\" />\n\n                                <label htmlFor=\"\">Senha:</label>\n                                <input type=\"password\" className=\"w3-input\"   onChange={handleChange}  id=\"senha\" placeholder=\"Digite sua senha\" />\n                               \n                                \n\n\n                                <input type=\"hidden\" value=\"tipo\"    onChange={handleChange} id=\"tipo\"  />\n                            </div>\n\n                            <input type=\"submit\" className=\"w3-btn w3-block w3-green\" value=\"salvar\" onClick={handleClick} />\n                        </form>\n                        \n                    </div>\n                </section>\n            </div>\n}\n\nexport default Cadastrar;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Comentarios.js",["120","121","122","123","124","125","126","127"],"import React, { useEffect, useState } from 'react';\nimport { Get } from 'react-axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\nimport cookie from 'react-cookies'\nfunction Comentarios(props){\n    const [comentario, setComentario] = useState(\n        {nome: '', email: '', aplicativo: '', classificacao: '', comentario: ''} \n    );\n    const [isRecarregar, setRecarregar] = useState(true)\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n    \n      function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n\n    function handleChange(e) {\n        comentario[e.target.id]=e.target.value;\n        setRecarregar(false)\n        console.log(comentario);\n    }\n\n    function handleClick(e) {\n        comentario['aplicativo']=document.querySelector('#aplicativo').value;\n        let cabecalho = { 'Content-Type': 'application/json' };\n        console.log(comentario, cabecalho);\n\n            fetch(`http://localhost:5000/api/comentario/`, {\n                method: 'POST', headers: cabecalho, body: JSON.stringify(comentario)\n            })\n                .then((res) => {alert('Sucesso ao executar!')})\n                .catch((erro) => {alert('erro ao executar!')})\n        setComentario({nome: '', email: '', aplicativo: '', classificacao: '', comentario: ''} )\n        document.querySelector('#formulario').reset()\n        setRecarregar(true)\n\n    }\n\n    return  <div>\n\n\n                <form id=\"formulario\" className=\"w3-container w3-panel\">\n                    <div className=\"w3-row-padding\">\n                        <div className=\"w3-half\">\n                            <label id=\"nome\">Nome:</label>\n                            <input type=\"text\" className=\"w3-input\" required onChange={handleChange} id=\"nome\" placeholder=\"Digite seu nome\" />       \n                        </div>\n                        <div className=\"w3-half\">\n                            <label id=\"email\">Email:</label>\n                            <input type=\"email\" className=\"w3-input\" required onChange={handleChange} id=\"email\" placeholder=\"Digite seu email\" /> \n                        </div>\n                    </div>\n\n                    <label id=\"classificacao\">Classifique o app:</label>\n                    <select className=\"w3-select\" id=\"classificacao\" required onChange={handleChange} >\n                        <option value=\"0\">Muito Ruim</option>\n                        <option value=\"1\">Ruim</option>\n                        <option value=\"2\">Medio</option>\n                        <option value=\"3\">Bom</option>\n                        <option value=\"4\">Muito Bom</option>\n                    </select>\n\n                    <label id=\"comentario\">Coment√°rio:</label>\n                    <textarea className=\"w3-input\"  onChange={handleChange} required id=\"comentario\" cols=\"50\" rows=\"20\" placeholder=\"Digite sua reclama√ß√£o ou elogio aqui\"></textarea>\n\n                    <input type=\"hidden\" id=\"aplicativo\" value={props.id} />\n\n                    <input type=\"submit\" onClick={handleClick} className=\"w3-btn w3-block w3-green\" value=\"salvar\"  />\n                              \n                </form>\n                <section className=\"w3-container w3-panel\">\n                    {isRecarregar == true &&\n                        <Get  url={\"http://localhost:5000/api/comentario/aplicativo/\"+props.id} >\n                        {(erro, response, isLoading, makeRequest, axios) => {\n                            if(erro) return <p>Erro!</p>\n                            if(isLoading) return <p> Carregando!</p>\n                            if(response != null){\n                                let codigo = [];\n                                codigo.push(\n                                        response.data.map((valores, indice)=>{\n                                            return <article className=\"w3-container w3-panel\">\n                                                <p><b>Nome:</b> {valores.nome}  </p>\n                                                <p><b>Email:</b> {valores.email} </p>\n                                                <p><b>Coment√°rio:</b> {valores.comentario} </p>\n                                                <p><b>Satisfa√ß√£o: </b> \n                                                    {valores.classificacao == 0 && <span className=\"w3-text-red\"><FontAwesomeIcon icon={faStar} /> </span>}\n                                                    {valores.classificacao == 1 && <span className=\"w3-text-yellow\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 2 && <span className=\"w3-text-black\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 3 && <span className=\"w3-text-blue\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                    {valores.classificacao == 4 && <span className=\"w3-text-green\"><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /><FontAwesomeIcon icon={faStar} /></span>}\n                                                </p>\n                                                <hr/>\n                                            </article>\n                                        })\n                                        \n                                );\n                                return codigo;\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>}\n                </section>\n            </div>\n}\n\nexport default Comentarios;","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Login.js",["128","129","130"],"import React, { useEffect, useState } from 'react'\nimport Cabecalho from '../Cabecalho'\nimport {Link} from 'react-router-dom'\nimport cookie from 'react-cookies'\n\nfunction Login(props){\n    const [usuario, setUsuario] = useState(\n        {usuario: '', senha: ''}\n    );\n    const [log, setLog] = useState({\n        log: ''\n    })\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n\n      function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n\n    function handleChange(e) {\n        usuario[e.target.id] = e.target.value;\n        console.log(usuario);\n        console.log(log);\n    }\n\n    function handleClick(e) {\n        let cabecalho = { 'Content-Type': 'application/json' };\n        console.log(usuario, cabecalho);\n        console.log(log);\n        \n\n        fetch(`http://localhost:5000/api/login/`,{\n            method: 'POST', headers: cabecalho, body: JSON.stringify(usuario)\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                cookie.save('token', data.token)\n                cookie.save('usuario', data.usuario)\n                alert('Sucesso ao logar')\n            })\n            .catch((erro) => {\n                cookie.remove('token')\n                cookie.remove('usuario')\n                alert('Erro ao executar!')\n            })\n\n        \n        setUsuario({usuario: '', senha: ''})\n        document.querySelector('#formulario').reset();\n    }\n\n\n    return  <div>\n                <Cabecalho titulo={props.titulo} />\n\n                <section className=\"w3-container w3-panel\">\n                    <div className=\"w3-card-4\">\n                        <form id=\"formulario\">\n                            <div className=\"w3-container w3-blue\">\n                                <h2 className=\"w3-center\">Login</h2>\n                            </div>\n\n                            <div className=\"w3-container w3-panel\">\n                                <label htmlFor=\"\">Usu√°rio:</label>\n                                <input type=\"text\" className=\"w3-input\"  onChange={handleChange} id=\"usuario\" placeholder=\"Digite seu nome\" />\n\n                                <label htmlFor=\"\">Senha:</label>\n                                <input type=\"password\" className=\"w3-input\"   onChange={handleChange}  id=\"senha\" placeholder=\"Digite sua senha\" />\n                            </div>\n                            <input type=\"submit\" className=\"w3-btn w3-block w3-green\" value=\"Salvar\" onClick={handleClick} /> \n                        </form>\n                    </div>\n                </section>\n\n\n                <section className=\"w3-container w3-panel\">\n                    <p>Ainda n√£o √© cadastrado? </p>\n                    <p>Fa√ßa seu cadadastro <Link to=\"/cadastrar\" className=\"w3-text-blue\">aqui</Link></p>\n                </section>\n            </div>\n}\n\nexport default Login","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Pesquisar.js",["131","132","133","134"],"import { func } from 'prop-types'\nimport  React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Get } from 'react-axios'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport Cabecalho from '../Cabecalho'\nimport cookie from 'react-cookies'\n\nfunction Pesquisar(props){\n    let { id } = useParams()\n\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n\n      \n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token);\n      })\n      \n    return  <section className=\"w3-container w3-panel\">\n                <Cabecalho titulo={props.titulo} />\n\n                <Get url={\"http://localhost:5000/api/aplicativo/pesquisar/\"+id} >\n                    {(erro, response, isLoading, makeRequest, axios)=>{\n                        if(erro)return <p>Erro!</p>\n                        if(isLoading)return <p>Carregando!</p>\n                        if(response != null && response.data.length == 0) return <p> Nenhum aplicativo foi encontrado!</p>\n                        if(response != null){\n                            let codigo = []\n                            codigo.push(<section className=\"w3-container w3-panel\">\n                                            \n                                            {response.data.map((valores, erro) => {\n                                                return <div className=\"w3-container w3-panel\">\n                                                            <Link className=\"w3-button w3-blue largura\" to={\"/aplicativo/\"+valores._id}>\n                                                                <h3 className=\"w3-center\">{valores.nome}</h3>\n                                                                <p className=\"w3-center\">{valores.slogan}</p>\n                                                            </Link>\n\n                                                            <p className=\"w3-rigth\"><b>Categorias</b>\n                                                                {valores.categorias.map((valores, indice) => {\n                                                                    return <Link className=\"w3-button w3-tag w3-blue\" to={\"/categoria/\"+valores._id}>\n                                                                                {valores.categoria}\n                                                                            </Link>\n                                                                })}\n                                                            </p>\n                                                        </div>\n                                            })}\n                                        </section>)\n                            return codigo\n                        }\n                        return <p>N√£o aconteceu nada!</p>\n                    }}\n                </Get>\n            </section>\n}\n\nexport default Pesquisar","/home/gustavo/Documentos/GitHub/eagle/frontend/src/components/rota/Usuario.js",["135","136","137"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport Cabecalho from '../Cabecalho'\nimport { AxiosProvider , Get} from 'react-axios'\n\nfunction Usuario(props) {\n    const [token, setToken] = useState({\n        token: cookie.loadAll()\n      })\n\n      \n    function componentWillMount() {\n        token['token'] = cookie.loadAll()\n      }\n\n      useEffect(() =>{\n        token['token'] = cookie.loadAll()\n        console.log(token == undefined);\n        console.log(JSON.parse(token.token['token']).token);\n      })\n      \n    const axiosInstance = axios.create({\n        headers: {'x-access-token': JSON.parse(token.token['token']).token}\n    })\n\n    return <section className=\"w3-container w3-panel\">\n                <Cabecalho titulo={props.titulo} />\n                \n\n                  <AxiosProvider instance={axiosInstance}>\n                    <Get url=\"http://localhost:5000/api/usuario/pesquisar\" params={JSON.parse(token.token['usuario'])} >\n                        {(erro, response, isLoading, makeRequest, axios) =>{\n                            if(erro) return <p>Erro!</p>\n                            if(isLoading) return <p>Carregando!</p>\n                            if(response != null){\n                                let codigo = []\n                                codigo.push(<section value=\"w3-container w3-panel\">\n                                              \n                                              {response.data.map((valores, indice)=>{\n                                                  return <div>\n                                                            <p><b>Nome:</b>{valores.nome+' '+valores.sobrenome}</p>\n                                                            <p><b>Email:</b>{valores.email}</p>\n                                                            <p><b>Usu√°rio:</b>{valores.usuario}</p>\n                                                            \n                                                          </div>\n                                              })}\n                                            </section>)\n                                return codigo\n                            }\n                            return <p>Nem Carregou!</p>\n                        }}\n                    </Get>\n                  </AxiosProvider>\n\n\n            </section>\n}\n\nexport default Usuario",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":12},{"ruleId":"142","severity":1,"message":"146","line":11,"column":17,"nodeType":"144","messageId":"145","endLine":11,"endColumn":25},{"ruleId":"142","severity":1,"message":"147","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":11,"column":17,"nodeType":"144","messageId":"145","endLine":11,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":13,"column":19,"nodeType":"144","messageId":"145","endLine":13,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":29,"column":14,"nodeType":"144","messageId":"145","endLine":29,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":52,"column":53,"nodeType":"152","endLine":52,"endColumn":99},{"ruleId":"150","severity":1,"message":"151","line":53,"column":57,"nodeType":"152","endLine":53,"endColumn":103},{"ruleId":"153","severity":1,"message":"154","line":56,"column":75,"nodeType":"155","messageId":"156","endLine":56,"endColumn":77},{"ruleId":"150","severity":1,"message":"151","line":61,"column":44,"nodeType":"152","endLine":61,"endColumn":89},{"ruleId":"157","severity":1,"message":"158","line":67,"column":40,"nodeType":"159","messageId":"160","endLine":67,"endColumn":42},{"ruleId":"157","severity":1,"message":"161","line":71,"column":40,"nodeType":"159","messageId":"160","endLine":71,"endColumn":42},{"ruleId":"157","severity":1,"message":"161","line":75,"column":40,"nodeType":"159","messageId":"160","endLine":75,"endColumn":42},{"ruleId":"142","severity":1,"message":"146","line":5,"column":19,"nodeType":"144","messageId":"145","endLine":5,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":9,"column":16,"nodeType":"144","messageId":"145","endLine":9,"endColumn":34},{"ruleId":"142","severity":1,"message":"162","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":13},{"ruleId":"142","severity":1,"message":"163","line":3,"column":25,"nodeType":"144","messageId":"145","endLine":3,"endColumn":34},{"ruleId":"142","severity":1,"message":"146","line":14,"column":19,"nodeType":"144","messageId":"145","endLine":14,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":18,"column":16,"nodeType":"144","messageId":"145","endLine":18,"endColumn":34},{"ruleId":"142","severity":1,"message":"164","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":11,"column":11,"nodeType":"144","messageId":"145","endLine":11,"endColumn":15},{"ruleId":"142","severity":1,"message":"148","line":11,"column":17,"nodeType":"144","messageId":"145","endLine":11,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":12,"column":19,"nodeType":"144","messageId":"145","endLine":12,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":16,"column":14,"nodeType":"144","messageId":"145","endLine":16,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":34,"column":70,"nodeType":"155","messageId":"156","endLine":34,"endColumn":72},{"ruleId":"153","severity":1,"message":"154","line":54,"column":70,"nodeType":"155","messageId":"156","endLine":54,"endColumn":72},{"ruleId":"157","severity":1,"message":"161","line":57,"column":73,"nodeType":"159","messageId":"160","endLine":57,"endColumn":75},{"ruleId":"157","severity":1,"message":"158","line":58,"column":73,"nodeType":"159","messageId":"160","endLine":58,"endColumn":75},{"ruleId":"153","severity":1,"message":"154","line":76,"column":70,"nodeType":"155","messageId":"156","endLine":76,"endColumn":72},{"ruleId":"157","severity":1,"message":"161","line":79,"column":73,"nodeType":"159","messageId":"160","endLine":79,"endColumn":75},{"ruleId":"157","severity":1,"message":"158","line":80,"column":73,"nodeType":"159","messageId":"160","endLine":80,"endColumn":75},{"ruleId":"153","severity":1,"message":"154","line":98,"column":70,"nodeType":"155","messageId":"156","endLine":98,"endColumn":72},{"ruleId":"157","severity":1,"message":"161","line":101,"column":73,"nodeType":"159","messageId":"160","endLine":101,"endColumn":75},{"ruleId":"157","severity":1,"message":"158","line":102,"column":73,"nodeType":"159","messageId":"160","endLine":102,"endColumn":75},{"ruleId":"142","severity":1,"message":"146","line":5,"column":19,"nodeType":"144","messageId":"145","endLine":5,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":9,"column":14,"nodeType":"144","messageId":"145","endLine":9,"endColumn":32},{"ruleId":"142","severity":1,"message":"146","line":13,"column":19,"nodeType":"144","messageId":"145","endLine":13,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":17,"column":16,"nodeType":"144","messageId":"145","endLine":17,"endColumn":34},{"ruleId":"142","severity":1,"message":"146","line":10,"column":19,"nodeType":"144","messageId":"145","endLine":10,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":14,"column":16,"nodeType":"144","messageId":"145","endLine":14,"endColumn":34},{"ruleId":"142","severity":1,"message":"146","line":11,"column":19,"nodeType":"144","messageId":"145","endLine":11,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":14,"column":14,"nodeType":"144","messageId":"145","endLine":14,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":19,"column":24,"nodeType":"159","messageId":"160","endLine":19,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":24,"column":24,"nodeType":"159","messageId":"160","endLine":24,"endColumn":26},{"ruleId":"142","severity":1,"message":"146","line":11,"column":19,"nodeType":"144","messageId":"145","endLine":11,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":15,"column":16,"nodeType":"144","messageId":"145","endLine":15,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":79,"column":35,"nodeType":"159","messageId":"160","endLine":79,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":93,"column":76,"nodeType":"159","messageId":"160","endLine":93,"endColumn":78},{"ruleId":"157","severity":1,"message":"158","line":94,"column":76,"nodeType":"159","messageId":"160","endLine":94,"endColumn":78},{"ruleId":"157","severity":1,"message":"158","line":95,"column":76,"nodeType":"159","messageId":"160","endLine":95,"endColumn":78},{"ruleId":"157","severity":1,"message":"158","line":96,"column":76,"nodeType":"159","messageId":"160","endLine":96,"endColumn":78},{"ruleId":"157","severity":1,"message":"158","line":97,"column":76,"nodeType":"159","messageId":"160","endLine":97,"endColumn":78},{"ruleId":"142","severity":1,"message":"165","line":10,"column":17,"nodeType":"144","messageId":"145","endLine":10,"endColumn":23},{"ruleId":"142","severity":1,"message":"146","line":13,"column":19,"nodeType":"144","messageId":"145","endLine":13,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":17,"column":16,"nodeType":"144","messageId":"145","endLine":17,"endColumn":34},{"ruleId":"142","severity":1,"message":"166","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":12,"column":19,"nodeType":"144","messageId":"145","endLine":12,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":17,"column":14,"nodeType":"144","messageId":"145","endLine":17,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":33,"column":69,"nodeType":"159","messageId":"160","endLine":33,"endColumn":71},{"ruleId":"142","severity":1,"message":"146","line":8,"column":19,"nodeType":"144","messageId":"145","endLine":8,"endColumn":27},{"ruleId":"142","severity":1,"message":"149","line":13,"column":14,"nodeType":"144","messageId":"145","endLine":13,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":19,"column":27,"nodeType":"159","messageId":"160","endLine":19,"endColumn":29},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'componentWillMount' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Get' is defined but never used.","'useParams' is defined but never used.","'faTablet' is defined but never used.","'setLog' is assigned a value but never used.","'func' is defined but never used.","no-global-assign","no-unsafe-negation"]